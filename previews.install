<?php

/**
 * Implementation of hook_uninstall().
 */
function previews_uninstall() {
  // Remove tables.
  drupal_uninstall_schema('previews');
  db_query("DELETE FROM {variable} WHERE name LIKE 'previews%'");
  // Remove any cached images.
  $path = file_directory_path() .'/previews/';
  if (is_dir($path)) {
    _previews_recursive_delete($path);
  }
}

/**
 * Recursively delete all files and folders in the specified filepath, then
 * delete the containing folder.
 *
 * Note that this only deletes visible files with write permission.
 *
 * @param string $path
 *   A filepath relative to file_directory_path.
 */
function _previews_recursive_delete($path) {
  if (is_file($path) || is_link($path)) {
    unlink($path);
  }
  elseif (is_dir($path)) {
    $d = dir($path);
    while (($entry = $d->read()) !== FALSE) {
      if ($entry == '.' || $entry == '..') continue;
      $entry_path = $path .'/'. $entry;
      _previews_recursive_delete($entry_path);
    }
    $d->close();
    rmdir($path);
  }
  else {
    watchdog('previews', 'Unknown file type(%path) stat: %stat ',
              array('%path' => $path,  '%stat' => print_r(stat($path),1)), WATCHDOG_ERROR);
  }

}

/**
* Implementation of hook_schema().
*/
function previews_schema() {
  $schema = array();

	$schema['previews'] = array(
	  'description' => t('Stores the Previews-Information'),
	  'fields' => array(
	    'fid' => array(
	      'description' => t('The File id'),
	      'type' => 'int',
	      'not null' => TRUE,
	    ),
	    'preview' => array(
	      'description' => t('0 if no Preview available, Timestamp of the Preview'),
	      'type' => 'int',
	      'not null' => TRUE,
	      'default' => 0,
	    ),
	    'pages' => array(
	      'description' => t('Pages count, -1 if not readable'),
	      'type' => 'int',
	      'not null' => TRUE,
	      'default' => 0,
	    ),
	  ),
	  'indexes' => array(
	    'fid' => array('fid'),
	  ),
	);
  
  return $schema;
}

/**
* Implementation of hook_install().
*/
function previews_install() {
  drupal_install_schema('previews');
	return array();
}